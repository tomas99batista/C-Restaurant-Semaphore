TRABALHO 2 SO
ENTREGA DIA 11 JANEIRO
Restaurante
3 entidades
	.grupos			Group
	.rececionista		Recepcionist
	.empregado		Waiter
	.cozinheiro		Chef
2 mesas
numero de grupos variavel
coordenar umas com as outras
PERCURSO:
Demoram a chegar ao restaurante
Grupo dirige rececionsita (RESTAURANTE: Ta cheio e espera, nao ta cheio e dao mesa *n obrigado* rececionista decide)
RECECIONISTA da autorizacao e chega a mesa e pede ao waiter a comida
waiter pede ao cozinheiro 

GRUPO: quanto tempo demoram a chegar e quanto tempo tempo demoram a comer

Atribuir mesas por ordem de chegada, 12345, etc, decidir

Podemos fazer cada modulo de cada vez

Começar chefe que é o + facil

CONTAR COM DEADLOCKS E FAZER TESTES E PERCEBER PQEQ ELE PAROU OU NAO ESTA A DAR SYNC

PERCURSO
Grupo chega Rececionista
Rececionista da mesa ao grupo
Grupo pede comida Waiter	
Waiter informa o chefe 
Chefe avisa comida pronta
Waiter leva comida grupo 
Group pede conta (bill request) ao rececionista
Rececionista diz que pode sair

./run corre 1000x garantindo que assim nao tem deadlocks

Começar chef, começar c 1 grupo, qto menos interações melhor
Mudar num grupos e manter waiting time

Qdo 1 grupo pede 1 mesa os outros tem q esperar
SEMAFOROSSSSSSSSSSSSSS

mutex p garantir acesso regiao critica (muito longa e c mts zonas mas e partilhada p todos os processos)

DOXYGEN - gera merdas a partir dos comentarios, ver o html dps (so funciona em html) firefox html/index.html > Gera este file

começar por tentar perceber como cada semaforo vai ser usado
ver as descriçoes, complementar as descriçoes, ver quando e usado
valor inicial quem faz up quem faz down

ponteiro p memoria partilhada
semaforos
	sh -> mutex
	sh -> waitPrder

full state 
	sh->fST nGrupos (FST=Estados)
		groupsWaiting
stat
	sh->fst.st.chefState